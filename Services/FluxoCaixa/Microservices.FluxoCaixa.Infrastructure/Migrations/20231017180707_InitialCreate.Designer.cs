// <auto-generated />
using System;
using Microservices.FluxoCaixa.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservices.FluxoCaixa.Infrastructure.Migrations
{
    [DbContext(typeof(FluxoCaixaContext))]
    [Migration("20231017180707_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microservices.FluxoCaixa.Core.Entities.Movimentacao.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("UltimaModificacaoPor")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Microservices.FluxoCaixa.Core.Entities.Movimentacao.ContaCorrenteRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("Saldo");

                    b.Property<int>("TipoMovimentacao")
                        .HasColumnType("int");

                    b.Property<string>("UltimaModificacaoPor")
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorTransacao")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("ValorTransacao");

                    b.HasKey("Id")
                        .HasName("PK_IDCONTACORRENTE");

                    b.HasIndex("ClienteId");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("Microservices.FluxoCaixa.Core.Entities.Movimentacao.Cliente", b =>
                {
                    b.OwnsOne("Microservices.FluxoCaixa.Core.Common.ValueObjects.CpfVO", "CPF", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("CPF");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("CPF");
                });

            modelBuilder.Entity("Microservices.FluxoCaixa.Core.Entities.Movimentacao.ContaCorrenteRoot", b =>
                {
                    b.HasOne("Microservices.FluxoCaixa.Core.Entities.Movimentacao.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
